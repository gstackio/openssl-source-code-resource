#!/bin/bash

set -ueo pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

destination=$1

payload=$(cat <&0)

version=$(jq --raw-output '.version.version // empty' <<< "${payload}")
if [[ -z ${version} ]]; then
    echo >&2 "Version info 'version' is missing"
    exit 1
fi

source_family=$(jq -r '.source.family // empty' <<< "${payload}")
if [[ -z ${source_family} ]]; then
    echo >&2 "Source parameter 'family' is missing"
    exit 1
fi

>&2 echo "Fetching assets in ${source_family} family v${version}"

pushd "${destination}" > /dev/null
echo "${version}"       > version
echo "${source_family}" > family

tarball_url=$(
    (
        curl --silent --fail --show-error --location \
                --url "https://artfiles.org/openssl.org/source/old/${source_family}/" \
            | sed -ne 's|^.*href="\(openssl-'"${version}"'\.tar\.gz\)">.*|https://www.openssl.org/source/old/'"${source_family}"'/\1|p'
        curl --silent --fail --show-error --location \
                --url "https://artfiles.org/openssl.org/source/" \
            | sed -ne 's|^.*href="\(openssl-'"${version}"'\.tar\.gz\)">.*|https://www.openssl.org/source/\1|p'
    ) | tail -n1
)
if [[ -z ${tarball_url} ]]; then
    echo >&2 "No such 'openssl-${version}.tar.gz' tarball available" \
        "on 'https://artfiles.org/openssl.org/source/'" \
        "or 'https://artfiles.org/openssl.org/source/old/${source_family}/'"
    exit 1
fi

echo >&2 "Downloading ${tarball_url}"
curl  --silent --fail --show-error --location --remote-name \
    --url "${tarball_url}"
curl  --silent --fail --show-error --location --output "sha256" \
    --url "${tarball_url}.sha256"
sha256=$(< sha256)
sha256sum --check <<< "${sha256}  openssl-${version}.tar.gz"

jq --null-input \
    --arg "version" "${version}" \
    '{ version: { version: $version } }' \
    >&3
